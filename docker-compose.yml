version: "3.8"

services:
  frontend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
      - ./frontend/build:/app/build
    command: sh -c "npm ci && npm run build"

  ssr:
    build:
      context: ./frontend
      dockerfile: Dockerfile.ssr
    working_dir: /app
    volumes:
      - ./frontend/build:/app/build
    ports:
      - "4000:4000"
    depends_on:
      - frontend
    networks:
      - web

  backend:
    build: ./backend
    env_file: ./backend/.env
    ports:
      - "3001:3001"
    restart: always
    environment:
      - NODE_ENV=production
    networks:
      - web

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - web

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot 
      --email ojeda.alejandro@hotmail.com --agree-tos --no-eff-email 
      -d servidorossa.ddns.net"

##Cuando tenga que renovar certificado
# nginx-temp:
#     image: nginx:latest
#     ports:
#       - "80:80"
#     volumes:
#       - ./certbot/www:/var/www/certbot
#       - ./nginx/nginx-certbot.conf:/etc/nginx/nginx.conf:ro
#     networks:
#       - web

networks:
  web:
